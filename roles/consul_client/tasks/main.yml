---
# tasks file for consul_bootstrap
- name: Copy the Consul config file
  template:
    src: client-server.json.j2
    dest: "{{ consul_config_dir }}/client-server.json"
    owner: "{{ consul_username }}"
    group: "{{ consul_groupname }}"
    mode: 0750
  notify: restart_service
  when: ansible_facts['os_family'] != "Debian"

- name: Register the node_exporter with consul
  template:
    src: external.json.j2
    dest: "{{ consul_config_dir }}/external.hcl"
    owner: "{{ consul_username }}"
    group: "{{ consul_groupname }}"
    mode: 0750
  notify: restart_service


- name: Copy the Consul Systemd file
  template:
    src: consul.service.j2
    dest: "/etc/systemd/system/consul.service"
    owner: "{{ consul_username }}"
    group: "{{ consul_groupname }}"
    mode: 0640
  notify: systemd_reload
  when: ansible_facts['os_family'] != "Debian"

- name: Copy the Consul Systemd file
  template:
    src: consul.service.ubuntu.j2
    dest: "/etc/systemd/system/consul.service"
    owner: "{{ consul_username }}"
    group: "{{ consul_groupname }}"
    mode: 0640
  notify: systemd_reload
  when: ansible_facts['os_family'] == "Debian"
- name: Flushing the handler
  meta: flush_handlers

- name: Validate the consul agent config file
  command: "consul validate {{ consul_config_dir }}"
  register: consul_status

- name: Start the Consul service
  service:
    name: "consul"
    state: started
    enabled: true

- name: Adding the firewall rule
  firewalld:
    port: "{{  item }}/tcp"
    state: enabled
    permanent: yes
    immediate: yes
  when: ansible_facts['os_family'] != "Debian"
  loop:
      - 8500
      - 8300
      - 8301
      - 8302
      - 8600

- name: Firewall rule for Ubuntu System
  ufw:
    port: "{{ item }}"
    proto: tcp
    rule: allow
  when: ansible_facts['os_family'] == "Debian"
  loop:
      - 8500
      - 8300
      - 8301
      - 8302
      - 8600



